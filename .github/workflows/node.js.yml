name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/ClientApp
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './src/ClientApp/package-lock.json'
    - name: Restore dependencies
      run: npm ci

    - name: Check source format
      run: npm run lint

    - name: Build
      run: npm run build --if-present

    # - name: Test
    #   run: npm test

  build-container:
    runs-on: ubuntu-latest
    name: Build docker image
    needs: [build]
    env:
      IMAGE: react-client
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-nodejs-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-nodejs-

      - name: Build Client Docker image
        run: |
          docker build -t $IMAGE:${{ github.sha }} -f docker/client-app/Dockerfile ./
