name: .NET CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and test Web API application
    env:
      SOLUTION: dotnet-web-api-react-template.sln

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Restore nuget package cache
      uses: actions/cache@v2
      id: nuget-cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

    - name: Restore dependencies
      run: |
        dotnet restore --use-lock-file --locked-mode $SOLUTION

    - name: Install dotnet-format
      run: |
        dotnet tool install -g dotnet-format

    - name: Check source format
      run: |
        dotnet format --verify-no-changes $SOLUTION

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

  build-container:
    runs-on: ubuntu-latest
    name: Build docker image
    needs: [build]
    env:
      IMAGE: dotnet-web-api
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-dotnet-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-dotnet-

      - name: Build Web API Docker image
        run: |
          docker build -t $IMAGE:${{ github.sha }} -f docker/web-api/Dockerfile ./
